---

- name: Download APT signing key
  ansible.builtin.get_url:
    url: "{{ docker[ansible_distribution]['gpg_key'] }}"
    dest: /tmp/docker.gpg
    validate_certs: false
    mode: "0644"
  environment:
    https_proxy: "{{ https_proxy | default('') }}"
    http_proxy: "{{ http_proxy | default('') }}"
  check_mode: no
  changed_when: false

- name: Convert APT key into binary format
  ansible.builtin.command:
    cmd: gpg --batch --yes --no-tty --dearmor -o /tmp/docker1.gpg /tmp/docker.gpg
  changed_when: false

- name: Retrieve fingerprint from key
  ansible.builtin.shell: |
    set -o pipefail
    gpg --with-colons /tmp/docker.gpg | \
    awk -F: '/^pub:/ {print $5}'
  args:
    executable: /bin/bash
  changed_when: false
  check_mode: no
  register: __gpg_fpr

- name: Show fingerprint of the key
  ansible.builtin.debug:
    msg: "Key {{ __gpg_fpr.stdout }}"

- name: Delete APT signing key from legacy location
  ansible.builtin.apt_key:
    id: "0x{{ __gpg_fpr.stdout }}"
    state: absent
    keyring: /etc/apt/trusted.gpg
  when: ansible_distribution_major_version | int < 13

- name: Import APT signing key into the proper drop-in directory
  ansible.builtin.apt_key:
    file: /tmp/docker.gpg
    state: present
    keyring: /etc/apt/trusted.gpg.d/docker.gpg
  when: ansible_distribution_major_version | int < 12

- name: Copy APT signing key into the proper drop-in directory
  ansible.builtin.copy:
    src: /tmp/docker1.gpg
    dest: /etc/apt/trusted.gpg.d/docker.gpg
    remote_src: yes
    mode: "0644"
  when: ansible_distribution_major_version | int >= 12

- name: Delete obsolete repository file
  ansible.builtin.file:
    path: /etc/apt/sources.list.d/download_docker_com_linux_debian.list
    state: absent

- name: Setup repository definition (10/11)
  ansible.builtin.apt_repository:
    filename: docker-ce
    repo: "{{ docker_apt_repository }}"
    state: present
    update_cache: true
  when: ansible_distribution_major_version | int < 12

- name: Setup repository definition (12+)
  ansible.builtin.apt_repository:
    filename: docker-ce
    repo: "{{ docker_apt_repository_12 }}"
    state: present
    update_cache: true
  when: ansible_distribution_major_version | int >= 12

- name: Install Docker
  ansible.builtin.package:
    name: "{{ package }}"
    state: present
  loop: "{{ docker_packages }}"
  loop_control:
    loop_var: package
  become: yes

- name: Start Docker service
  ansible.builtin.service:
    name: docker
    state: started
    enabled: yes
  become: yes

- name: Install pip modules
  ansible.builtin.pip:
    name: "{{ package }}"
  environment:
    https_proxy: "{{ https_proxy | default('') }}"
    http_proxy: "{{ http_proxy | default('') }}"
  loop: "{{ docker_pip }}"
  loop_control:
    loop_var: package
  tags: molecule-idempotence-notest

- name: Add users to docker group
  ansible.builtin.user:
    name: "{{ item }}"
    groups: docker
    append: yes
  become: yes
  loop: "{{ docker_users | default([]) }}"
