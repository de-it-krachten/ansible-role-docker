---

- name: Download RPM signing key
  ansible.builtin.get_url:
    url: "{{ docker[ansible_distribution]['gpg_key'] }}"
    dest: /tmp/docker.gpg
    validate_certs: false
    mode: "0644"
  environment:
    https_proxy: "{{ https_proxy | default('') }}"
    http_proxy: "{{ http_proxy | default('') }}"
  check_mode: no
  changed_when: false

- name: Import RPM signing key
  ansible.builtin.rpm_key:
    state: present
    key: /tmp/docker.gpg

- name: Download repo definition
  ansible.builtin.get_url:
    url: "{{ docker[ansible_distribution]['repo_url'] }}"
    dest: /etc/yum.repos.d/docker-ce.repo
    mode: '0644'

- name: Use alternative OS release
  ansible.builtin.replace:
    path: /etc/yum.repos.d/docker-ce.repo
    regexp: '\$releasever'
    replace: '{{ docker_os_release }}'
  when: docker_os_release is defined

- name: RHEL7
  when: ansible_distribution_major_version | int == 7
  become: yes
  tags: molecule-idempotence-notest
  block:

    - name: Remove obsolete Docker package (RHEL7)  # noqa fqcn[action-core]
      ansible.builtin.yum:
        name: "{{ package }}"
        state: absent
      loop: "{{ docker_packages_remove }}"
      loop_control:
        loop_var: package

    - name: Install Docker (RHEL7)  # noqa fqcn[action-core]
      ansible.builtin.yum:
        name: "{{ package }}"
        state: present
      loop: "{{ docker_packages }}"
      loop_control:
        loop_var: package

- name: RHEL8+/Fedora
  when: ansible_distribution_major_version | int >= 8
  tags: molecule-idempotence-notest
  become: yes
  block:

    - name: Remove obsolete Docker package (RHEL8+/Fedora)
      ansible.builtin.dnf:
        name: "{{ package }}"
        state: absent
      loop: "{{ docker_packages_remove }}"
      loop_control:
        loop_var: package

    - name: Install Docker (RHEL8+/Fedora)
      ansible.builtin.dnf:
        name: "{{ package }}"
        state: present
      loop: "{{ docker_packages }}"
      loop_control:
        loop_var: package

- name: Start Docker service
  ansible.builtin.service:
    name: docker
    state: started
    enabled: yes
  become: yes

- name: Install pip modules
  ansible.builtin.pip:
    name: "{{ package }}"
  loop: "{{ docker_pip }}"
  loop_control:
    loop_var: package
  tags: molecule-idempotence-notest

- name: Add users to docker group
  ansible.builtin.user:
    name: "{{ item }}"
    groups: docker
    append: yes
  become: yes
  loop: "{{ docker_users | default([]) }}"
