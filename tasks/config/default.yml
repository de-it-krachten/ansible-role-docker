---

# ---------------------------------------------------------
# Docker daemon config
# ---------------------------------------------------------

- name: Create /etc/docker directory
  ansible.builtin.file:
    path: /etc/docker
    state: directory
    mode: '0755'

- name: Read Docker daemon file
  ansible.builtin.command: cat /etc/docker/daemon.json
  register: docker_daemon_content
  changed_when: no
  failed_when: no
  check_mode: no

- name: Get current daemon settings + required API settings
  ansible.builtin.set_fact:
    docker_daemon: "{{ docker_daemon_content.stdout | from_json }}"
  when: docker_daemon_content.stdout | length > 0

- name: Merge existing and new settings
  ansible.builtin.set_fact:
    docker_daemon_options: "{{ docker_daemon | combine(docker_daemon_options) }}"


# ---------------------------------------------------------
# API
# ---------------------------------------------------------

- name: Define API settings
  when: docker_api | bool
  block:

    - name: Show if API should use TLS
      ansible.builtin.debug:
        var: docker_api_tls

    - name: Get the required API settings
      ansible.builtin.set_fact:
        docker_daemon_api: "{{ docker_daemon_api_tls if docker_api_tls else docker_daemon_api_notls }}"

    - name: Merge existing and new settings
      ansible.builtin.set_fact:
        docker_daemon_options: "{{ docker_daemon_options | combine(docker_daemon_api) }}"

# ---------------------------------------------------------
# Proxy
# ---------------------------------------------------------

- name: Define proxy settings
  block:

    - name: Add docker proxy settings for containers
      ansible.builtin.set_fact:
        docker_daemon_options: "{{ docker_daemon_options | combine(docker_proxy_container_settings) }}"
      when: docker_proxy_containers | bool

    - name: Remove docker proxy settings for containers
      ansible.builtin.set_fact:
        docker_daemon_options: "{{ docker_daemon_options | combine(docker_proxy_container_settings_clear) }}"
      when: not docker_proxy_containers | bool


# ---------------------------------------------------------
# daemon config
# ---------------------------------------------------------

- name: Docker daemon file
  ansible.builtin.copy:
    dest: /etc/docker/daemon.json
    content: "{{ docker_daemon_options | to_nice_json }}"
    mode: '0644'
  notify: Restart docker

# ---------------------------------------------------------
# Systemd
# ---------------------------------------------------------

- name: Create docker.service.d directory
  ansible.builtin.file:
    path: /etc/systemd/system/docker.service.d
    state: directory
    mode: '0755'

- name: Configure API access over tcp
  become: yes
  ansible.builtin.template:
    src: "override.conf.j2"
    dest: /etc/systemd/system/docker.service.d/override.conf
    mode: '0644'
  notify: Restart docker

- name: Configure docker to use HTTP proxy
  ansible.builtin.copy:
    content: |
      [Service]
      Environment="HTTP_PROXY={{ docker_http_proxy }}"
      Environment="HTTPS_PROXY={{ docker_https_proxy }}"
      Environment="NO_PROXY={{ docker_no_proxy }}"
    dest: /etc/systemd/system/docker.service.d/http-proxy.conf
    mode: "0644"
  when: docker_http_proxy is defined and docker_http_proxy | length > 0
  notify: Restart docker

- name: Unconfigure docker to use HTTP proxy
  ansible.builtin.file:
    path: /etc/systemd/system/docker.service.d/http-proxy.conf
    state: absent
  when: docker_http_proxy is undefined or docker_http_proxy | length == 0
  notify: Restart docker

- name: Force systemd to reread configs
  ansible.builtin.systemd:
    daemon_reload: yes

- name: Flush handlers
  ansible.builtin.meta: flush_handlers


# ---------------------------------------------------------
# Networking
# ---------------------------------------------------------

- name: Configure networking
  when: docker_networking_outbound | bool
  block:

    - name: Populate service facts
      ansible.builtin.service_facts:

    - name: Activate IP forwarding
      ansible.posix.sysctl:
        name: net.ipv4.ip_forward
        value: '1'
        sysctl_set: yes
        sysctl_file: /etc/sysctl.d/99-docker.conf
        state: present
        reload: yes
      when: ansible_facts.services['firewalld.service'] is defined

    - name: Enable firewalld forwarding
      ansible.builtin.command: >-
        firewall-cmd --permanent --direct --add-rule ipv4 filter FORWARD 0 -d 0.0.0.0/0 -j ACCEPT
      changed_when: false
      when: ansible_facts.services['firewalld.service'] is defined

    - name: Reload firewalld configuration
      ansible.builtin.command: firewall-cmd --reload
      changed_when: false
      when: ansible_facts.services['firewalld.service'] is defined
